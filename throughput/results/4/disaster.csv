Q21,715297.0,->  Nested Loop Semi Join  (cost=2406.31..2848130.77 rows=1 width=34) (actual time=32.312..35678.164 rows=715297 loops=1)
Q3,315435.9,->  Sort  (cost=2540781.11..2548667.01 rows=3154359 width=20) (actual time=35083.336..35083.337 rows=10 loops=1)
Q18,301427.8,->  GroupAggregate  (cost=10193208.77..11022135.28 rows=30142782 width=39) (actual time=68157.757..68158.094 rows=100 loops=1)
Q18,67905.0,->  Hash Join  (cost=2186167.00..2801648.35 rows=7537460 width=39) (actual time=43802.906..49423.181 rows=111 loops=1)
Q18,67905.0,->  Hash Join  (cost=2117139.00..2619558.45 rows=7537460 width=20) (actual time=42920.754..48540.740 rows=111 loops=1)
Q18,67905.0,->  Hash  (cost=2801648.35..2801648.35 rows=7537460 width=39) (actual time=49423.429..49423.429 rows=111 loops=1)
Q18,42999.6,->  Sort  (cost=10193208.77..10268565.73 rows=30142782 width=39) (actual time=68157.744..68157.782 rows=701 loops=1)
Q21,40144.0,->  Nested Loop Anti Join  (cost=2406.88..2848132.55 rows=1 width=26) (actual time=32.902..38581.817 rows=40144 loops=1)
Q18,38793.7,->  Hash Join  (cost=2895866.60..5624456.57 rows=30142782 width=39) (actual time=49634.557..68156.666 rows=777 loops=1)
Q18,36581.3,->  Hash  (cost=2066382.37..2066382.37 rows=4060530 width=4) (actual time=42809.428..42809.428 rows=111 loops=1)
Q18,36581.3,->  HashAggregate  (cost=1975020.44..2025777.07 rows=4060530 width=8) (actual time=38030.851..42809.008 rows=111 loops=1)
Q10,28796.7,->  Sort  (cost=2283714.85..2285154.69 rows=575935 width=175) (actual time=29747.974..29747.978 rows=20 loops=1)
Q9,26627.2,->  Sort  (cost=1123451.87..1123452.18 rows=123 width=46) (actual time=89558.066..90037.853 rows=3275151 loops=1)
Q9,26627.2,->  Nested Loop  (cost=66799.54..1123443.74 rows=123 width=24) (actual time=957.921..80879.708 rows=3275151 loops=1)
Q9,26627.2,->  Nested Loop  (cost=66799.11..1123384.13 rows=123 width=24) (actual time=957.853..48421.899 rows=3275151 loops=1)
Q9,26627.2,->  Nested Loop  (cost=66798.82..1123344.44 rows=123 width=28) (actual time=957.840..38067.102 rows=3275151 loops=1)
Q9,26627.2,->  Hash Join  (cost=66801.10..1123447.61 rows=123 width=46) (actual time=957.988..84173.344 rows=3275151 loops=1)
Q2,4825.0,->  Merge Join  (cost=465687.92..884524.73 rows=1 width=190) (actual time=5418.759..7325.000 rows=4825 loops=1)
Q21,4049.0,->  HashAggregate  (cost=2848132.56..2848132.57 rows=1 width=26) (actual time=38631.311..38632.418 rows=4049 loops=1)
Q15,3791.0,->  Subquery Scan on revenue4  (cost=1759366.01..1759451.31 rows=3791 width=12) (actual time=49637.354..49657.683 rows=1 loops=1)
Q15,3791.0,->  Sort  (cost=1759676.65..1759686.13 rows=3791 width=12) (actual time=49657.704..49657.705 rows=1 loops=1)
Q15,3791.0,Merge Join  (cost=3502010.32..3507108.39 rows=3791 width=79) (actual time=49694.582..49694.585 rows=1 loops=1)
Q15,3791.0,->  HashAggregate  (cost=1759366.01..1759413.40 rows=3791 width=12) (actual time=49637.353..49657.680 rows=1 loops=1)
Q7,765.5,Sort  (cost=2135157.43..2135165.09 rows=3062 width=64) (actual time=23788.399..23788.400 rows=4 loops=1)
Q7,765.5,->  HashAggregate  (cost=2134934.21..2134980.14 rows=3062 width=64) (actual time=23788.333..23788.342 rows=4 loops=1)
Q8,366.5,Sort  (cost=1713891.03..1713892.86 rows=733 width=38) (actual time=9854.600..9854.601 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=1713843.32..1713856.15 rows=733 width=38) (actual time=9854.562..9854.564 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2848132.58..2848132.58 rows=1 width=26) (actual time=38633.557..38633.562 rows=100 loops=1)
Q21,100.0,Limit  (cost=2848132.58..2848132.58 rows=1 width=26) (actual time=38633.558..38633.574 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=884524.74..884524.75 rows=1 width=190) (actual time=7329.864..7329.879 rows=100 loops=1)
Q2,100.0,Limit  (cost=884524.74..884524.75 rows=1 width=190) (actual time=7329.866..7329.891 rows=100 loops=1)
Q11,34.3,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=7212.110..7213.151 rows=9322 loops=1)
Q11,34.3,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=7134.013..7207.035 rows=9322 loops=1)
Q3,27.6,->  HashAggregate  (cost=2441072.96..2472616.55 rows=3154359 width=20) (actual time=35023.991..35062.277 rows=114042 loops=1)
Q15,26.3,->  HashAggregate  (cost=1742248.07..1742285.98 rows=3791 width=12) (actual time=22868.283..22904.475 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=742296)
Q14,14.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7729.10 rows=758110 width=0) (actual time=118.662..118.662 rows=10686720 loops=1)
Q3,10.4,->  Hash Join  (cost=764705.14..2393757.57 rows=3154359 width=20) (actual time=7582.280..34752.971 rows=302283 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2416.81 rows=320640 width=0) (actual time=34.655..34.655 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.014..0.073 rows=8 loops=436644)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.590..3.590 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.598..3.598 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.240..0.240 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.294..0.294 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.252..0.252 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.253..0.253 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.011..0.011 rows=1 loops=1200105)
Q5,5.0,Sort  (cost=1906543.09..1906543.15 rows=25 width=34) (actual time=20917.380..20917.381 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1906542.26..1906542.51 rows=25 width=34) (actual time=20917.325..20917.325 rows=5 loops=1)
Q4,5.0,Sort  (cost=1490783.25..1490783.26 rows=1 width=16) (actual time=15214.022..15214.023 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.04 rows=5 width=4) (actual time=0.011..0.011 rows=1 loops=573739)
Q4,5.0,->  HashAggregate  (cost=1490783.23..1490783.24 rows=1 width=16) (actual time=15213.974..15213.976 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=715297)
Q4,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5844.35 rows=580435 width=0) (actual time=27.367..27.367 rows=2545920 loops=1)
Q13,4.3,Sort  (cost=845604.26..845604.76 rows=200 width=8) (actual time=25839.923..25839.928 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=845594.62..845596.62 rows=200 width=8) (actual time=25839.852..25839.861 rows=46 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5844.35 rows=580435 width=0) (actual time=27.324..27.324 rows=2545920 loops=1)
Q17,3.8,->  Nested Loop  (cost=78.40..112390.75 rows=19804 width=4) (actual time=1.563..196.762 rows=5184 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.018..0.020 rows=4 loops=456081)
Q4,3.3,->  Nested Loop Semi Join  (cost=5990.03..1490001.51 rows=156344 width=16) (actual time=27.568..14892.710 rows=526499 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.014..0.033 rows=3 loops=1969)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243273.47 rows=32416729 width=0) (actual time=118.054..118.054 rows=10708480 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.29 rows=1 width=8) (actual time=0.305..0.375 rows=3 loops=21781)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55046.49 rows=7334198 width=0) (actual time=27.189..27.189 rows=2545920 loops=1)
Q15,2.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..216848.18 rows=28893358 width=0) (actual time=124.944..124.944 rows=10686720 loops=1)
Q15,2.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..216848.18 rows=28893358 width=0) (actual time=118.217..118.217 rows=10696960 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44199.73 rows=5887964 width=0) (actual time=27.188..27.188 rows=2535680 loops=1)
Q22,2.3,Sort  (cost=693580.37..693580.38 rows=3 width=20) (actual time=9998.183..9998.183 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=640615.13..640615.17 rows=3 width=20) (actual time=9998.137..9998.139 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.033..0.049 rows=2 loops=6534)
Q20,2.0,->  Nested Loop  (cost=754.49..11669221.62 rows=29347 width=4) (actual time=13.082..8541.797 rows=58872 loops=1)
Q20,2.0,->  Hash  (cost=11669221.62..11669221.62 rows=29347 width=4) (actual time=8580.645..8580.645 rows=58872 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2019.47 rows=200747 width=0) (actual time=4.177..4.177 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3035033.23..3035033.24 rows=1 width=27) (actual time=34038.162..34038.162 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3035033.21..3035033.22 rows=1 width=27) (actual time=34038.110..34038.110 rows=2 loops=1)
Q21,1.9,->  Nested Loop  (cost=2405.75..2326286.78 rows=390575 width=38) (actual time=32.263..31483.617 rows=742296 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1904416.23 rows=801410 width=34) (actual time=32.195..23826.816 rows=1535824 loops=1)
Q16,1.9,->  Sort  (cost=403712.47..405199.34 rows=594751 width=40) (actual time=10622.727..10756.701 rows=1188035 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.552..4514.907 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54764.61..346670.12 rows=594751 width=40) (actual time=1244.437..7262.778 rows=1188035 loops=1)
Q10,1.9,->  Hash Join  (cost=345514.99..2248231.71 rows=575935 width=175) (actual time=5969.168..27413.936 rows=1147063 loops=1)
Q10,1.9,->  Hash Join  (cost=345513.42..2240311.04 rows=575935 width=153) (actual time=5969.131..27006.095 rows=1147063 loops=1)
Q10,1.9,->  Hash Join  (cost=276485.42..2162644.01 rows=575935 width=12) (actual time=4621.871..24934.548 rows=1147063 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1818864.65 rows=20035244 width=8) (actual time=0.015..17809.948 rows=37966905 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.035..0.515 rows=56 loops=1)
Q20,1.5,Sort  (cost=11672031.60..11672034.53 rows=1174 width=51) (actual time=8626.726..8626.828 rows=1835 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669631.46..11671971.74 rows=1174 width=51) (actual time=8581.165..8624.708 rows=1835 loops=1)
Q1,1.5,Sort  (cost=4210901.20..4210901.22 rows=6 width=20) (actual time=90230.052..90230.053 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4210901.02..4210901.12 rows=6 width=20) (actual time=90230.002..90230.003 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2262630.08..2268389.43 rows=575935 width=175) (actual time=29378.427..29608.521 rows=381266 loops=1)
Q9,1.4,GroupAggregate  (cost=1123451.87..1123456.18 rows=123 width=46) (actual time=89567.201..92161.980 rows=175 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..6014.33 rows=600233 width=0) (actual time=4.147..4.147 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2877.45 rows=140243 width=0) (actual time=691.757..691.757 rows=190964 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2912.51..41871.89 rows=140243 width=24) (actual time=699.904..804.493 rows=190964 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91527.48 rows=9137948 width=0) (actual time=118.835..118.835 rows=10708480 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=102100 width=4) (actual time=0.012..916.643 rows=109161 loops=1)
Q9,1.0,->  Hash Join  (cost=66798.25..351838.06 rows=408181 width=16) (actual time=957.680..5170.115 rows=436644 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=102100 width=4) (actual time=957.172..957.172 rows=109161 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.694..1982.456 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=407.63..1666072.40 rows=120964 width=20) (actual time=6.947..7500.830 rows=120537 loops=1)
Q8,1.0,->  Nested Loop  (cost=407.19..1471441.98 rows=397493 width=16) (actual time=6.740..3349.500 rows=396569 loops=1)
Q8,1.0,->  Nested Loop  (cost=38738.07..1712904.28 rows=24193 width=16) (actual time=2084.969..9779.530 rows=23973 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.15 rows=31 width=20) (actual time=0.023..0.231 rows=30 loops=13229)
Q8,1.0,->  Hash Join  (cost=38739.63..1713359.46 rows=24193 width=38) (actual time=2085.023..9816.989 rows=23973 loops=1)
Q8,1.0,->  Hash Join  (cost=38737.77..1705098.10 rows=24193 width=16) (actual time=2084.957..9643.817 rows=23973 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2075.642..2075.642 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..403.33 rows=13187 width=0) (actual time=4.480..4.480 rows=13229 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=406.63..27937.90 rows=13187 width=4) (actual time=6.710..165.440 rows=13229 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.622..386.469 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=8) (actual time=0.007..2998.042 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2122161.48 rows=1461804 width=42) (actual time=625.983..23060.545 rows=1460590 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2134021.70 rows=60834 width=64) (actual time=670.028..23697.253 rows=58417 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..532478.49 rows=1205994 width=30) (actual time=625.954..8556.325 rows=1200105 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.039..587.121 rows=119793 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..41.606 rows=8002 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=625.444..625.444 rows=119793 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=43.706..43.706 rows=8002 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91719.77..1368060.60 rows=769145 width=8) (actual time=119.696..22582.353 rows=764604 loops=1)
Q5,1.0,->  Nested Loop  (cost=83112.88..1886702.37 rows=1826617 width=46) (actual time=2608.845..19913.955 rows=1824438 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.681..2448.059 rows=299838 loops=1)
Q5,1.0,->  Hash Join  (cost=87791.88..1905811.63 rows=73063 width=34) (actual time=2666.518..20824.973 rows=72679 loops=1)
Q5,1.0,->  Hash Join  (cost=83112.32..438085.74 rows=456764 width=38) (actual time=2608.824..10091.626 rows=456081 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2579.501..2579.501 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=44770.68..386612.14 rows=2283821 width=8) (actual time=27.351..6452.731 rows=2281857 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.626..478.372 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5989.46..269229.99 rows=580435 width=20) (actual time=27.540..8204.237 rows=573739 loops=1)
Q3,1.0,->  Hash Join  (cost=106607.79..494991.39 rows=1466888 width=12) (actual time=401.620..7000.246 rows=1463100 loops=1)
Q3,1.0,->  Hash  (cost=494991.39..494991.39 rows=1466888 width=12) (actual time=7457.198..7457.198 rows=1463100 loops=1)
Q3,1.0,->  Hash  (cost=45977.63..45977.63 rows=300010 width=4) (actual time=372.308..372.308 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6874.50 rows=300010 width=0) (actual time=63.157..63.157 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56880.04..403091.51 rows=7334198 width=16) (actual time=27.344..4338.144 rows=7295920 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251377.65..1727323.76 rows=32416729 width=12) (actual time=118.797..21793.061 rows=32308736 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6949.50..45977.63 rows=300010 width=4) (actual time=71.218..297.935 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=4) (actual time=0.020..4994.353 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=4) (actual time=9028.766..9028.766 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=596632.21..640167.30 rows=59710 width=20) (actual time=9773.598..9977.230 rows=63522 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6582.81 rows=382909 width=0) (actual time=77.257..77.257 rows=382317 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6678.53..52007.89 rows=382909 width=4) (actual time=85.176..569.706 rows=382317 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.326..31.078 rows=4049 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=32.147..32.147 rows=4049 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.315..30.438 rows=4049 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=5418.468..5545.521 rows=1602608 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.290..138.092 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7894 width=30) (actual time=0.095..1121.833 rows=8121 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=148.918..4362.889 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=148.773..148.773 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.254..26.749 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.291..42.103 rows=4021 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=8.784..8.784 rows=21781 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.272..41.254 rows=4021 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.377..328.768 rows=21781 loops=1)
Q19,1.0,->  Nested Loop  (cost=12942.98..623061.93 rows=1144 width=8) (actual time=37.807..1780.343 rows=1131 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4024.20 rows=401220 width=0) (actual time=4.142..4.142 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.11 rows=8141 width=0) (actual time=3.576..3.576 rows=8135 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.39 rows=8069 width=0) (actual time=3.367..3.367 rows=8175 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.19 rows=8049 width=0) (actual time=3.478..3.478 rows=7975 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=4884)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12938.24..26865.53 rows=4859 width=30) (actual time=31.786..274.032 rows=4884 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.006..2161.122 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673592.63 rows=60285563 width=8) (actual time=0.004..10404.897 rows=59986308 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673592.63 rows=60285563 width=8) (actual time=0.062..8564.518 rows=59986308 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.039 rows=30 loops=1969)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.039 rows=30 loops=1969)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.14 rows=1971 width=0) (actual time=0.896..0.896 rows=1969 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.63..6539.50 rows=1971 width=4) (actual time=1.221..37.937 rows=1969 loops=1)
Q16,1.0,Sort  (cost=413485.44..413555.17 rows=27894 width=40) (actual time=11407.489..11409.500 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51029.19..51029.19 rows=297535 width=40) (actual time=1241.933..1241.933 rows=297179 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403712.47..411425.79 rows=27894 width=40) (actual time=10622.777..11348.849 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2491.19..51029.19 rows=297535 width=40) (actual time=34.715..1120.814 rows=297179 loops=1)
Q15,1.0,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.042..27.125 rows=96965 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=217418.78..1719424.15 rows=2282392 width=12) (actual time=118.954..20587.910 rows=2245732 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=217418.78..1719424.15 rows=2282392 width=12) (actual time=125.691..24503.486 rows=2245732 loops=1)
Q14,1.0,->  Hash Join  (cost=93440.63..1139720.80 rows=758110 width=29) (actual time=1338.632..27723.533 rows=748462 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7918.63..1042827.15 rows=758110 width=12) (actual time=119.538..25734.597 rows=748462 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..442970.50 rows=14804806 width=8) (actual time=0.017..7232.367 rows=14838716 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..734070.59 rows=14804806 width=8) (actual time=796.354..16780.544 rows=15338734 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=20) (actual time=0.007..4609.304 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2427162.17 rows=290284 width=15) (actual time=0.034..23682.981 rows=312271 loops=1)
Q12,1.0,->  Hash Join  (cost=593719.70..3029953.24 rows=290284 width=27) (actual time=9710.480..33718.687 rows=312271 loops=1)
Q12,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=20) (actual time=9665.723..9665.723 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.294..37.804 rows=4007 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.294..24.093 rows=4007 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.027..2896.350 rows=320560 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=38.896..3921.278 rows=320560 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=38.843..38.843 rows=4007 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.956..24.956 rows=4007 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.267..23.462 rows=4007 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.278..37.138 rows=4007 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1824306.54 rows=59664862 width=20) (actual time=0.013..19464.498 rows=59367183 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1824306.54 rows=14958054 width=12) (actual time=0.020..17358.034 rows=14808721 loops=1)
Q10,1.0,->  Hash  (cost=269229.99..269229.99 rows=580435 width=8) (actual time=4618.524..4618.524 rows=573511 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5989.46..269229.99 rows=580435 width=8) (actual time=27.490..4448.579 rows=573511 loops=1)
