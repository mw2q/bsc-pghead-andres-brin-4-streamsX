Q21,703491.0,->  Nested Loop Semi Join  (cost=2406.31..2856697.02 rows=1 width=34) (actual time=42.061..37001.155 rows=703491 loops=1)
Q18,358842.6,->  GroupAggregate  (cost=10193208.77..11022135.28 rows=30142782 width=39) (actual time=67193.459..67193.737 rows=84 loops=1)
Q3,319035.0,->  Sort  (cost=2577081.99..2585057.86 rows=3190350 width=20) (actual time=36722.903..36722.903 rows=10 loops=1)
Q18,89731.6,->  Hash Join  (cost=2186167.00..2801648.35 rows=7537460 width=39) (actual time=43169.643..48866.167 rows=84 loops=1)
Q18,89731.6,->  Hash Join  (cost=2117139.00..2619558.45 rows=7537460 width=20) (actual time=42039.341..47735.638 rows=84 loops=1)
Q18,89731.6,->  Hash  (cost=2801648.35..2801648.35 rows=7537460 width=39) (actual time=48866.338..48866.338 rows=84 loops=1)
Q18,51263.2,->  Sort  (cost=10193208.77..10268565.73 rows=30142782 width=39) (actual time=67193.447..67193.484 rows=588 loops=1)
Q18,51263.2,->  Hash Join  (cost=2895866.60..5624456.57 rows=30142782 width=39) (actual time=49296.851..67192.637 rows=588 loops=1)
Q18,48339.6,->  Hash  (cost=2066382.37..2066382.37 rows=4060530 width=4) (actual time=41922.581..41922.581 rows=84 loops=1)
Q18,48339.6,->  HashAggregate  (cost=1975020.44..2025777.07 rows=4060530 width=8) (actual time=37423.672..41922.415 rows=84 loops=1)
Q21,39721.0,->  Nested Loop Anti Join  (cost=2406.88..2856698.80 rows=1 width=26) (actual time=43.563..39880.342 rows=39721 loops=1)
Q10,27452.9,->  Sort  (cost=2279994.96..2281367.60 rows=549058 width=175) (actual time=31110.932..31110.934 rows=20 loops=1)
Q9,23351.4,->  Sort  (cost=1230097.29..1230097.64 rows=140 width=46) (actual time=86199.735..86747.306 rows=3269197 loops=1)
Q9,23351.4,->  Nested Loop  (cost=66974.72..1230088.11 rows=140 width=24) (actual time=951.237..77409.393 rows=3269197 loops=1)
Q9,23351.4,->  Nested Loop  (cost=66974.28..1230020.26 rows=140 width=24) (actual time=951.213..49753.009 rows=3269197 loops=1)
Q9,23351.4,->  Nested Loop  (cost=66973.99..1229975.09 rows=140 width=28) (actual time=951.203..39627.305 rows=3269197 loops=1)
Q9,23351.4,->  Hash Join  (cost=66976.28..1230092.30 rows=140 width=46) (actual time=951.289..80616.834 rows=3269197 loops=1)
Q2,4650.0,->  Merge Join  (cost=465687.92..884866.71 rows=1 width=190) (actual time=6350.707..8214.819 rows=4650 loops=1)
Q21,3989.0,->  HashAggregate  (cost=2856698.80..2856698.81 rows=1 width=26) (actual time=39930.554..39931.613 rows=3989 loops=1)
Q15,3773.0,->  Subquery Scan on revenue3  (cost=2014848.78..2014933.67 rows=3773 width=12) (actual time=40607.539..40633.929 rows=1 loops=1)
Q15,3773.0,->  Sort  (cost=2015157.82..2015167.25 rows=3773 width=12) (actual time=40633.950..40633.951 rows=1 loops=1)
Q15,3773.0,Merge Join  (cost=4013022.51..4018120.31 rows=3773 width=79) (actual time=40655.097..40655.100 rows=1 loops=1)
Q15,3773.0,->  HashAggregate  (cost=2014848.78..2014895.94 rows=3773 width=12) (actual time=40607.538..40633.926 rows=1 loops=1)
Q7,765.5,Sort  (cost=2118912.37..2118920.03 rows=3062 width=64) (actual time=23644.002..23644.002 rows=4 loops=1)
Q7,765.5,->  HashAggregate  (cost=2118689.15..2118735.08 rows=3062 width=64) (actual time=23643.942..23643.944 rows=4 loops=1)
Q8,366.5,Sort  (cost=1750590.93..1750592.77 rows=733 width=38) (actual time=14623.726..14623.726 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=1750543.22..1750556.05 rows=733 width=38) (actual time=14623.689..14623.690 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2856698.82..2856698.83 rows=1 width=26) (actual time=39932.745..39932.752 rows=100 loops=1)
Q21,100.0,Limit  (cost=2856698.82..2856698.83 rows=1 width=26) (actual time=39932.747..39932.767 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=884866.72..884866.72 rows=1 width=190) (actual time=8219.447..8219.461 rows=100 loops=1)
Q2,100.0,Limit  (cost=884866.72..884866.72 rows=1 width=190) (actual time=8219.449..8219.474 rows=100 loops=1)
Q11,30.8,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=6467.317..6468.499 rows=10364 loops=1)
Q11,30.8,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=6389.690..6461.689 rows=10364 loops=1)
Q3,28.1,->  HashAggregate  (cost=2476236.17..2508139.67 rows=3190350 width=20) (actual time=36661.991..36701.931 rows=113390 loops=1)
Q15,26.5,->  HashAggregate  (cost=1997779.49..1997817.22 rows=3773 width=12) (actual time=19529.036..19564.366 rows=100000 loops=1)
Q14,15.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..6946.16 rows=679816 width=0) (actual time=119.114..119.114 rows=10708480 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=730379)
Q3,10.6,->  Hash Join  (cost=764999.51..2428380.92 rows=3190350 width=20) (actual time=7620.713..36359.098 rows=299819 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2400.36 rows=318447 width=0) (actual time=34.945..34.945 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.077 rows=8 loops=435892)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.603..3.603 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.582..3.582 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.239..0.239 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.234..0.234 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.265..0.265 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1908514.07..1908514.14 rows=25 width=34) (actual time=15590.755..15590.756 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1908513.24..1908513.49 rows=25 width=34) (actual time=15590.715..15590.716 rows=5 loops=1)
Q4,5.0,Sort  (cost=1467098.63..1467098.63 rows=1 width=16) (actual time=14884.573..14884.573 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.21 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=566981)
Q4,5.0,->  HashAggregate  (cost=1467098.61..1467098.62 rows=1 width=16) (actual time=14884.518..14884.520 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=703491)
Q10,4.6,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5573.48 rows=553348 width=0) (actual time=27.332..27.332 rows=2545920 loops=1)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5627.49 rows=558749 width=0) (actual time=27.327..27.327 rows=2538240 loops=1)
Q13,4.3,Sort  (cost=845604.26..845604.76 rows=200 width=8) (actual time=26928.471..26928.473 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=845594.62..845596.62 rows=200 width=8) (actual time=26928.389..26928.399 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.011 rows=1 loops=1201734)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.012..0.014 rows=4 loops=457866)
Q17,3.6,->  Nested Loop  (cost=78.40..112386.75 rows=19764 width=4) (actual time=1.602..180.137 rows=5444 loops=1)
Q4,3.4,->  Nested Loop Semi Join  (cost=5767.74..1466343.84 rows=150953 width=16) (actual time=27.526..14553.542 rows=519620 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.013..0.028 rows=3 loops=2017)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.50 rows=1 width=8) (actual time=0.273..0.342 rows=3 loops=21851)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55759.52 rows=7429270 width=0) (actual time=27.228..27.228 rows=2545920 loops=1)
Q3,2.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..240465.53 rows=32042338 width=0) (actual time=118.745..118.745 rows=10708480 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44243.80 rows=5893840 width=0) (actual time=27.208..27.208 rows=2538240 loops=1)
Q22,2.3,Sort  (cost=693387.26..693387.27 rows=3 width=20) (actual time=9075.036..9075.036 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=640543.99..640544.03 rows=3 width=20) (actual time=9074.987..9074.990 rows=7 loops=1)
Q20,2.2,->  Nested Loop  (cost=678.02..10613865.59 rows=26679 width=4) (actual time=12.638..7794.739 rows=59164 loops=1)
Q20,2.2,->  Hash  (cost=10613865.59..10613865.59 rows=26679 width=4) (actual time=7829.634..7829.634 rows=59164 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.034..0.049 rows=2 loops=6295)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2019.47 rows=200747 width=0) (actual time=4.199..4.199 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403156.35..404633.09 rows=590693 width=40) (actual time=9527.715..9665.118 rows=1187790 loops=1)
Q16,2.0,->  Hash Join  (cost=54667.45..346532.38 rows=590693 width=40) (actual time=1158.019..6168.383 rows=1187790 loops=1)
Q12,2.0,Sort  (cost=3035095.44..3035095.44 rows=1 width=27) (actual time=33374.892..33374.893 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3035095.42..3035095.43 rows=1 width=27) (actual time=33374.845..33374.846 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344492.45..2246167.69 rows=549058 width=175) (actual time=7064.940..28903.259 rows=1113063 loops=1)
Q10,2.0,->  Hash Join  (cost=344490.89..2238616.58 rows=549058 width=153) (actual time=7064.908..28510.770 rows=1113063 loops=1)
Q10,2.0,->  Hash Join  (cost=275462.89..2161352.71 rows=549058 width=12) (actual time=5772.154..26544.219 rows=1113063 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.804..3501.497 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1824306.54 rows=20095188 width=8) (actual time=0.016..18582.363 rows=37929015 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2333259.32 rows=391744 width=38) (actual time=41.999..32082.923 rows=730379 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1910106.89 rows=803808 width=34) (actual time=41.856..24603.424 rows=1512944 loops=1)
Q15,1.8,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.029..15.929 rows=53897 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.035..0.757 rows=56 loops=1)
Q20,1.6,Sort  (cost=10616634.43..10616637.10 rows=1067 width=51) (actual time=7859.609..7859.707 rows=1784 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10614242.08..10616580.76 rows=1067 width=51) (actual time=7830.160..7858.308 rows=1784 loops=1)
Q1,1.5,Sort  (cost=4211405.80..4211405.81 rows=6 width=20) (actual time=89832.150..89832.150 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4211405.62..4211405.72 rows=6 width=20) (actual time=89832.102..89832.104 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..6014.33 rows=600233 width=0) (actual time=4.127..4.127 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2259894.14..2265384.72 rows=549058 width=175) (actual time=30755.728..30974.358 rows=372717 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2867.58 rows=139260 width=0) (actual time=440.981..440.981 rows=190322 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2902.40..41835.97 rows=139260 width=24) (actual time=449.111..541.658 rows=190322 loops=1)
Q9,1.2,GroupAggregate  (cost=1230097.29..1230102.19 rows=140 width=46) (actual time=86209.940..88934.899 rows=175 loops=1)
Q20,1.2,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.58 rows=18003 width=0) (actual time=8.461..8.461 rows=21851 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91254.90 rows=9110690 width=0) (actual time=118.571..118.571 rows=10676480 loops=1)
Q18,1.1,Limit  (cost=10193208.77..10193211.52 rows=100 width=39) (actual time=67193.461..67193.746 rows=84 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=116114 width=4) (actual time=0.010..909.874 rows=108973 loops=1)
Q9,1.0,->  Hash Join  (cost=66973.43..352573.49 rows=464207 width=16) (actual time=951.178..4997.586 rows=435892 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=116114 width=4) (actual time=950.666..950.666 rows=108973 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.688..2522.518 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=418.36..1702558.47 rows=123707 width=20) (actual time=6.971..11695.837 rows=121480 loops=1)
Q8,1.0,->  Nested Loop  (cost=417.93..1503518.29 rows=406508 width=16) (actual time=6.769..5604.338 rows=399817 loops=1)
Q8,1.0,->  Nested Loop  (cost=38748.80..1749582.95 rows=24741 width=16) (actual time=2632.999..14539.119 rows=24446 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.64 rows=31 width=20) (actual time=0.028..0.396 rows=30 loops=13288)
Q8,1.0,->  Hash Join  (cost=38750.37..1750048.40 rows=24741 width=38) (actual time=2633.046..14582.231 rows=24446 loops=1)
Q8,1.0,->  Hash Join  (cost=38748.51..1741599.93 rows=24741 width=16) (actual time=2632.967..14395.915 rows=24446 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2623.779..2623.779 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.98 rows=13540 width=0) (actual time=4.482..4.482 rows=13288 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=417.36..28370.52 rows=13540 width=4) (actual time=6.717..191.610 rows=13288 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.633..493.793 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=8) (actual time=0.006..3397.752 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2105934.40 rows=1458894 width=42) (actual time=753.955..22902.366 rows=1456021 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2117778.46 rows=60713 width=64) (actual time=812.408..23552.044 rows=58190 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..531536.45 rows=1203596 width=30) (actual time=753.893..9102.874 rows=1201734 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.040..709.753 rows=120337 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.033..55.666 rows=7997 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=753.374..753.374 rows=120337 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=58.103..58.103 rows=7997 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91444.63..1363978.15 rows=758921 width=8) (actual time=119.352..29505.425 rows=762923 loops=1)
Q5,1.0,->  Nested Loop  (cost=83157.52..1888658.13 rows=1828450 width=46) (actual time=2160.015..14789.059 rows=1830372 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.694..2023.189 rows=300963 loops=1)
Q5,1.0,->  Hash Join  (cost=87836.52..1907781.87 rows=73137 width=34) (actual time=2211.573..15509.946 rows=73114 loops=1)
Q5,1.0,->  Hash Join  (cost=83156.95..438484.63 rows=457220 width=38) (actual time=2159.995..7701.238 rows=457866 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2130.627..2130.627 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=44815.32..386997.92 rows=2286100 width=8) (actual time=27.368..4680.009 rows=2284056 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.613..394.796 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5767.18..267923.41 rows=558749 width=20) (actual time=27.494..5874.785 rows=566981 loops=1)
Q3,1.0,->  Hash Join  (cost=107492.15..497761.39 rows=1500960 width=12) (actual time=402.131..7030.284 rows=1477400 loops=1)
Q3,1.0,->  Hash  (cost=497761.39..497761.39 rows=1500960 width=12) (actual time=7495.118..7495.118 rows=1477400 loops=1)
Q3,1.0,->  Hash  (cost=46087.19..46087.19 rows=303050 width=4) (actual time=372.797..372.797 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6945.30 rows=303050 width=0) (actual time=63.696..63.696 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57616.84..405016.71 rows=7429270 width=16) (actual time=27.387..4335.838 rows=7389111 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=248476.12..1719742.34 rows=32042338 width=12) (actual time=119.480..22810.693 rows=31933906 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=7021.06..46087.19 rows=303050 width=4) (actual time=71.910..297.748 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=4) (actual time=0.011..3818.884 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=4) (actual time=8359.886..8359.886 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=596622.10..640099.30 rows=59292 width=20) (actual time=8853.755..9054.337 rows=63226 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6538.70 rows=380224 width=0) (actual time=80.566..80.566 rows=381152 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6633.75..51892.63 rows=380224 width=4) (actual time=88.719..318.821 rows=381152 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.272..40.684 rows=3990 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=41.799..41.799 rows=3990 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.258..39.996 rows=3990 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6350.165..6484.798 rows=1603182 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.310..148.059 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7903 width=30) (actual time=0.019..1082.795 rows=7788 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=159.105..5202.248 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=158.961..158.961 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.256..28.723 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.268..26.932 rows=4049 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.250..26.303 rows=4049 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.59..33181.11 rows=20020 width=4) (actual time=12.042..287.650 rows=21851 loops=1)
Q19,1.0,->  Nested Loop  (cost=12941.15..617315.44 rows=1133 width=8) (actual time=31.790..1843.964 rows=1131 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4024.20 rows=401220 width=0) (actual time=4.137..4.137 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.91 rows=8119 width=0) (actual time=3.563..3.563 rows=8026 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.11 rows=8040 width=0) (actual time=3.315..3.315 rows=8073 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.91 rows=7920 width=0) (actual time=3.494..3.494 rows=7938 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.024..0.024 rows=30 loops=4694)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12936.41..26759.69 rows=4813 width=30) (actual time=31.137..272.604 rows=4694 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.006..2836.299 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673592.63 rows=60285563 width=8) (actual time=0.004..8525.092 rows=59986308 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673592.63 rows=60285563 width=8) (actual time=0.063..7899.817 rows=59986308 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.037 rows=30 loops=2017)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.037 rows=30 loops=2017)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.14 rows=1971 width=0) (actual time=0.886..0.886 rows=2017 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.63..6539.50 rows=1971 width=4) (actual time=1.225..32.512 rows=2017 loops=1)
Q16,1.0,Sort  (cost=412861.31..412930.57 rows=27704 width=40) (actual time=10311.363..10313.363 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=50957.41..50957.41 rows=295505 width=40) (actual time=1155.236..1155.236 rows=297113 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403156.35..410817.06 rows=27704 width=40) (actual time=9527.774..10253.181 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2474.23..50957.41 rows=295505 width=40) (actual time=35.016..1036.616 rows=297113 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1975020.44 rows=2275905 width=12) (actual time=0.021..17390.633 rows=2247682 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1975020.44 rows=2275905 width=12) (actual time=0.041..19181.174 rows=2247682 loops=1)
Q14,1.0,->  Hash Join  (cost=92638.11..1102421.76 rows=679816 width=29) (actual time=1651.866..24695.025 rows=697568 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7116.11..1006702.52 rows=679816 width=12) (actual time=120.085..22425.850 rows=697568 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..442970.50 rows=14804806 width=8) (actual time=0.021..6916.694 rows=14838716 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..734070.59 rows=14804806 width=8) (actual time=820.994..17267.716 rows=15338734 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=20) (actual time=0.012..4096.852 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2427162.17 rows=291560 width=15) (actual time=0.034..24194.685 rows=311391 loops=1)
Q12,1.0,->  Hash Join  (cost=593719.70..3029993.12 rows=291560 width=27) (actual time=8536.657..33053.210 rows=311391 loops=1)
Q12,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=20) (actual time=8491.426..8491.426 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.303..37.564 rows=3933 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.288..24.245 rows=3933 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=25.147..2309.043 rows=314640 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=38.634..3777.831 rows=314640 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=38.574..38.574 rows=3933 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.082..25.082 rows=3933 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.260..23.587 rows=3933 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.285..36.914 rows=3933 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1822478.38 rows=59723181 width=20) (actual time=0.011..19231.458 rows=59546884 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1824306.54 rows=14958054 width=12) (actual time=0.050..17808.352 rows=14808721 loops=1)
Q10,1.0,->  Hash  (cost=268546.04..268546.04 rows=553348 width=8) (actual time=5768.773..5768.773 rows=555192 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5711.82..268546.04 rows=553348 width=8) (actual time=27.499..5579.280 rows=555192 loops=1)
