Q21,699900.0,->  Nested Loop Semi Join  (cost=2406.31..2845262.57 rows=1 width=34) (actual time=53.986..34686.764 rows=699900 loops=1)
Q18,401103.5,->  GroupAggregate  (cost=10172983.12..11000259.10 rows=30082763 width=39) (actual time=65865.607..65865.851 rows=75 loops=1)
Q3,318036.0,->  Sort  (cost=2530406.92..2538357.82 rows=3180360 width=20) (actual time=37559.735..37559.736 rows=10 loops=1)
Q18,100299.6,->  Hash Join  (cost=2182234.44..2796572.97 rows=7522476 width=39) (actual time=42522.132..47876.831 rows=75 loops=1)
Q18,100299.6,->  Hash Join  (cost=2113206.44..2614707.83 rows=7522476 width=20) (actual time=41568.077..46922.570 rows=75 loops=1)
Q18,100299.6,->  Hash  (cost=2796572.97..2796572.97 rows=7522476 width=39) (actual time=47877.029..47877.029 rows=75 loops=1)
Q18,57300.5,->  Sort  (cost=10172983.12..10248190.03 rows=30082763 width=39) (actual time=65865.593..65865.626 rows=525 loops=1)
Q18,57300.5,->  Hash Join  (cost=2890603.92..5613760.88 rows=30082763 width=39) (actual time=48216.928..65864.694 rows=525 loops=1)
Q18,54140.4,->  Hash  (cost=2062449.81..2062449.81 rows=4060530 width=4) (actual time=41445.748..41445.748 rows=75 loops=1)
Q18,54140.4,->  HashAggregate  (cost=1971087.89..2021844.51 rows=4060530 width=8) (actual time=36113.885..41445.425 rows=75 loops=1)
Q21,39230.0,->  Nested Loop Anti Join  (cost=2406.88..2845264.35 rows=1 width=26) (actual time=54.320..37472.352 rows=39230 loops=1)
Q9,28827.3,->  Sort  (cost=1062511.12..1062511.41 rows=113 width=46) (actual time=80972.028..81505.649 rows=3257490 loops=1)
Q9,28827.3,->  Nested Loop  (cost=66699.44..1062503.59 rows=113 width=24) (actual time=810.284..72293.923 rows=3257490 loops=1)
Q9,28827.3,->  Nested Loop  (cost=66699.01..1062448.82 rows=113 width=24) (actual time=810.256..46180.869 rows=3257490 loops=1)
Q9,28827.3,->  Nested Loop  (cost=66698.71..1062412.36 rows=113 width=28) (actual time=810.246..36197.257 rows=3257490 loops=1)
Q9,28827.3,->  Hash Join  (cost=66701.00..1062507.27 rows=113 width=46) (actual time=810.345..75462.669 rows=3257490 loops=1)
Q10,28796.7,->  Sort  (cost=2283714.85..2285154.69 rows=575935 width=175) (actual time=31720.237..31720.240 rows=20 loops=1)
Q2,4753.0,->  Merge Join  (cost=465687.92..889849.78 rows=1 width=190) (actual time=6113.978..8006.717 rows=4753 loops=1)
Q21,3960.0,->  HashAggregate  (cost=2845264.35..2845264.36 rows=1 width=26) (actual time=37519.485..37520.544 rows=3960 loops=1)
Q15,3742.0,->  Subquery Scan on revenue1  (cost=1368868.27..1368952.46 rows=3742 width=12) (actual time=46175.424..46188.151 rows=1 loops=1)
Q15,3742.0,->  Sort  (cost=1369174.54..1369183.90 rows=3742 width=12) (actual time=46188.174..46188.175 rows=1 loops=1)
Q15,3742.0,Merge Join  (cost=2721195.38..2726292.71 rows=3742 width=79) (actual time=46201.884..46201.886 rows=1 loops=1)
Q15,3742.0,->  HashAggregate  (cost=1368868.27..1368915.04 rows=3742 width=12) (actual time=46175.422..46188.147 rows=1 loops=1)
Q7,765.5,Sort  (cost=2135157.43..2135165.09 rows=3062 width=64) (actual time=22763.127..22763.128 rows=4 loops=1)
Q7,765.5,->  HashAggregate  (cost=2134934.21..2134980.14 rows=3062 width=64) (actual time=22763.067..22763.071 rows=4 loops=1)
Q8,366.5,Sort  (cost=1744954.48..1744956.31 rows=733 width=38) (actual time=10708.704..10708.704 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=1744906.77..1744919.60 rows=733 width=38) (actual time=10708.666..10708.666 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2845264.37..2845264.38 rows=1 width=26) (actual time=37521.666..37521.673 rows=100 loops=1)
Q21,100.0,Limit  (cost=2845264.37..2845264.38 rows=1 width=26) (actual time=37521.668..37521.689 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=889849.79..889849.79 rows=1 width=190) (actual time=8011.338..8011.348 rows=100 loops=1)
Q2,100.0,Limit  (cost=889849.79..889849.79 rows=1 width=190) (actual time=8011.340..8011.362 rows=100 loops=1)
Q11,34.7,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=6861.947..6863.020 rows=9218 loops=1)
Q11,34.7,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=6783.303..6856.974 rows=9218 loops=1)
Q3,27.9,->  HashAggregate  (cost=2429876.89..2461680.49 rows=3180360 width=20) (actual time=37494.986..37538.728 rows=113609 loops=1)
Q15,26.7,->  HashAggregate  (cost=1351936.34..1351973.76 rows=3742 width=12) (actual time=21146.578..21173.612 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=726387)
Q14,13.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8258.60 rows=811060 width=0) (actual time=118.832..118.832 rows=10708480 loops=1)
Q3,10.5,->  Hash Join  (cost=762891.98..2382171.49 rows=3180360 width=20) (actual time=7646.561..37201.261 rows=300798 loops=1)
Q16,10.2,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2391.56 rows=317273 width=0) (actual time=34.907..34.907 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.014..0.070 rows=8 loops=433988)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.596..3.596 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.597..3.597 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.239..0.239 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.262..0.262 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.298..0.298 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.267..0.267 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.239..0.239 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.010 rows=1 loops=1200728)
Q5,5.0,Sort  (cost=1967599.01..1967599.08 rows=25 width=34) (actual time=16597.299..16597.300 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1967598.18..1967598.43 rows=25 width=34) (actual time=16597.256..16597.258 rows=5 loops=1)
Q4,5.0,Sort  (cost=1483229.76..1483229.76 rows=1 width=16) (actual time=13372.042..13372.043 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.11 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=573889)
Q4,5.0,->  HashAggregate  (cost=1483229.74..1483229.75 rows=1 width=16) (actual time=13371.991..13371.992 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=699900)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5769.30 rows=572930 width=0) (actual time=27.501..27.501 rows=2545920 loops=1)
Q13,4.3,Sort  (cost=845604.26..845604.76 rows=200 width=8) (actual time=26603.007..26603.013 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=845594.62..845596.62 rows=200 width=8) (actual time=26602.934..26602.945 rows=46 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5844.35 rows=580435 width=0) (actual time=27.346..27.346 rows=2545920 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=454892)
Q17,3.7,->  Nested Loop  (cost=83.30..117334.61 rows=20688 width=4) (actual time=1.615..185.206 rows=5492 loops=1)
Q4,3.4,->  Nested Loop Semi Join  (cost=5913.09..1482458.12 rows=154323 width=16) (actual time=27.700..13057.505 rows=525972 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.014..0.032 rows=3 loops=2020)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..61623.06 rows=8211074 width=0) (actual time=27.224..27.224 rows=2545920 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.29 rows=1 width=8) (actual time=0.286..0.356 rows=3 loops=21743)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55499.83 rows=7394644 width=0) (actual time=27.186..27.186 rows=2538240 loops=1)
Q3,2.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..240117.03 rows=31995871 width=0) (actual time=117.909..117.909 rows=10676480 loops=1)
Q15,2.7,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.029..10.190 rows=35977 loops=1)
Q22,2.3,Sort  (cost=693638.51..693638.51 rows=3 width=20) (actual time=8362.287..8362.288 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=640655.77..640655.82 rows=3 width=20) (actual time=8362.232..8362.236 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.033..0.049 rows=2 loops=6461)
Q20,2.0,->  Nested Loop  (cost=754.49..11669221.62 rows=29347 width=4) (actual time=13.144..7907.638 rows=58909 loops=1)
Q20,2.0,->  Hash  (cost=11669221.62..11669221.62 rows=29347 width=4) (actual time=7942.402..7942.402 rows=58909 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2019.47 rows=200747 width=0) (actual time=4.176..4.176 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402852.22..404323.38 rows=588466 width=40) (actual time=9908.414..10082.029 rows=1187126 loops=1)
Q16,2.0,->  Hash Join  (cost=54615.10..346457.76 rows=588466 width=40) (actual time=1214.464..6441.383 rows=1187126 loops=1)
Q12,2.0,Sort  (cost=3035039.62..3035039.62 rows=1 width=27) (actual time=33439.766..33439.766 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3035039.60..3035039.61 rows=1 width=27) (actual time=33439.712..33439.712 rows=2 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.535..3618.470 rows=7995520 loops=1)
Q10,1.9,->  Hash Join  (cost=345514.99..2248231.71 rows=575935 width=175) (actual time=7539.675..29504.948 rows=1146323 loops=1)
Q10,1.9,->  Hash Join  (cost=345513.42..2240311.04 rows=575935 width=153) (actual time=7539.646..29098.443 rows=1146323 loops=1)
Q10,1.9,->  Hash Join  (cost=276485.42..2162644.01 rows=575935 width=12) (actual time=6110.523..26989.028 rows=1146323 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817041.60 rows=20015163 width=8) (actual time=0.004..17471.821 rows=37928797 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323951.25 rows=390184 width=38) (actual time=53.968..30581.024 rows=726387 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1902509.85 rows=800607 width=34) (actual time=53.872..23274.773 rows=1503054 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.036..0.491 rows=56 loops=1)
Q9,1.5,GroupAggregate  (cost=1062511.12..1062515.08 rows=113 width=46) (actual time=80981.849..83675.528 rows=175 loops=1)
Q20,1.5,Sort  (cost=11672031.60..11672034.53 rows=1174 width=51) (actual time=7974.497..7974.594 rows=1829 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669631.46..11671971.74 rows=1174 width=51) (actual time=7942.873..7973.684 rows=1829 loops=1)
Q1,1.5,Sort  (cost=4181343.96..4181343.98 rows=6 width=20) (actual time=87700.038..87700.038 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4181343.78..4181343.88 rows=6 width=20) (actual time=87699.985..87699.987 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2262630.08..2268389.43 rows=575935 width=175) (actual time=31392.410..31581.026 rows=381620 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..6014.33 rows=600233 width=0) (actual time=4.157..4.157 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2907.20 rows=140418 width=0) (actual time=669.428..669.428 rows=191089 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2942.31..41906.28 rows=140418 width=24) (actual time=677.502..766.157 rows=191089 loops=1)
Q18,1.3,Limit  (cost=10172983.12..10172985.87 rows=100 width=39) (actual time=65865.610..65865.863 rows=75 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=94092 width=4) (actual time=0.016..772.980 rows=108497 loops=1)
Q9,1.1,->  Hash Join  (cost=66698.15..351417.81 rows=376166 width=16) (actual time=810.197..4651.124 rows=433988 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=94092 width=4) (actual time=809.646..809.646 rows=108497 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91691.11 rows=9154311 width=0) (actual time=118.823..118.823 rows=10708480 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.677..1939.814 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=422.03..1696921.26 rows=123715 width=20) (actual time=6.952..8376.527 rows=122561 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.60..1497862.98 rows=406536 width=16) (actual time=6.716..4792.547 rows=403218 loops=1)
Q8,1.0,->  Nested Loop  (cost=38752.48..1743946.42 rows=24743 width=16) (actual time=2048.666..10628.451 rows=24408 loops=1)
Q8,1.0,->  Hash Join  (cost=38754.04..1744411.91 rows=24743 width=38) (actual time=2048.715..10668.061 rows=24408 loops=1)
Q8,1.0,->  Hash Join  (cost=38752.18..1735962.77 rows=24743 width=16) (actual time=2048.653..10492.030 rows=24408 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2039.324..2039.324 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.58 rows=13487 width=0) (actual time=4.446..4.446 rows=13420 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.022..0.022 rows=30 loops=13420)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=416.95..28307.28 rows=13487 width=4) (actual time=6.653..45.724 rows=13420 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.038..0.339 rows=30 loops=13420)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.629..378.042 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=8) (actual time=0.006..3069.733 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2122161.48 rows=1461804 width=42) (actual time=838.728..22050.616 rows=1460202 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2134021.70 rows=60834 width=64) (actual time=884.346..22671.849 rows=57852 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..532478.49 rows=1205994 width=30) (actual time=838.695..8761.161 rows=1200728 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.038..792.762 rows=119868 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.040..43.336 rows=7929 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=838.217..838.217 rows=119868 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=45.401..45.401 rows=7929 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91883.74..1368592.74 rows=770522 width=8) (actual time=119.694..24996.857 rows=760467 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.733..2382.340 rows=299436 loops=1)
Q5,1.0,->  Nested Loop  (cost=100540.16..1947653.39 rows=1839255 width=46) (actual time=2526.455..15775.213 rows=1817996 loops=1)
Q5,1.0,->  Hash Join  (cost=105219.16..1966862.49 rows=73569 width=34) (actual time=2589.798..16511.377 rows=72818 loops=1)
Q5,1.0,->  Hash Join  (cost=100539.59..491462.44 rows=459921 width=38) (actual time=2526.432..8445.749 rows=454892 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2497.109..2497.109 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=62197.96..439898.07 rows=2299607 width=8) (actual time=27.382..5055.796 rows=2277722 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.630..465.740 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5912.53..269040.48 rows=572930 width=20) (actual time=27.665..4243.149 rows=573889 loops=1)
Q3,1.0,->  Hash Join  (cost=107223.81..496101.42 rows=1493965 width=12) (actual time=669.165..7056.425 rows=1476501 loops=1)
Q3,1.0,->  Hash  (cost=496101.42..496101.42 rows=1493965 width=12) (actual time=7521.703..7521.703 rows=1476501 loops=1)
Q3,1.0,->  Hash  (cost=46087.19..46087.19 rows=303050 width=4) (actual time=639.866..639.866 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6945.30 rows=303050 width=0) (actual time=63.650..63.650 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57348.49..403556.54 rows=7394644 width=16) (actual time=27.344..4064.625 rows=7384168 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=248116.00..1715607.39 rows=31995871 width=12) (actual time=118.656..23758.483 rows=32015426 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=7021.06..46087.19 rows=303050 width=4) (actual time=72.249..549.449 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=4) (actual time=0.010..3545.445 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=4) (actual time=7432.455..7432.455 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=596662.01..640207.39 rows=59785 width=20) (actual time=8154.608..8341.037 rows=63603 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6586.43 rows=383387 width=0) (actual time=74.798..74.798 rows=382307 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6682.28..52024.18 rows=383387 width=4) (actual time=82.573..548.516 rows=382307 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.304..52.231 rows=3961 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=53.842..53.842 rows=3961 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.290..51.301 rows=3961 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6113.214..6227.939 rows=1603265 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.314..151.882 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8031 width=30) (actual time=0.472..1142.701 rows=7962 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=163.059..5059.136 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=162.911..162.911 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.257..29.503 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.331..29.713 rows=4054 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=8.958..8.958 rows=21743 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.314..29.118 rows=4054 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.510..130.422 rows=21743 loops=1)
Q19,1.0,->  Nested Loop  (cost=12924.88..621670.32 rows=1143 width=8) (actual time=37.407..1661.815 rows=1175 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4024.20 rows=401220 width=0) (actual time=4.159..4.159 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.43 rows=8174 width=0) (actual time=3.295..3.295 rows=7959 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.03 rows=8030 width=0) (actual time=3.495..3.495 rows=8048 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.15 rows=7842 width=0) (actual time=3.580..3.580 rows=7987 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.024..0.024 rows=30 loops=4831)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12920.14..26822.06 rows=4848 width=30) (actual time=31.823..269.940 rows=4831 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.004..2515.744 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1670260.26 rows=60165526 width=8) (actual time=0.004..7417.658 rows=60045379 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1670260.26 rows=60165526 width=8) (actual time=0.012..8296.737 rows=60045379 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.038 rows=30 loops=2020)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.038 rows=30 loops=2020)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..73.02 rows=2059 width=0) (actual time=0.924..0.924 rows=2020 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.53..6795.44 rows=2059 width=4) (actual time=1.257..26.685 rows=2020 loops=1)
Q16,1.0,Sort  (cost=412519.87..412588.87 rows=27600 width=40) (actual time=10754.160..10756.342 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=50918.98..50918.98 rows=294391 width=40) (actual time=1212.021..1212.021 rows=296945 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402852.22..410484.04 rows=27600 width=40) (actual time=9908.468..10696.666 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2465.16..50918.98 rows=294391 width=40) (actual time=34.971..1077.729 rows=296945 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..86118.35 rows=11462713 width=0) (actual time=125.196..125.196 rows=10708480 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..86118.35 rows=11462713 width=0) (actual time=118.439..118.439 rows=10708480 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=86682.75..1329360.44 rows=2257590 width=12) (actual time=119.219..19284.801 rows=2244583 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=86682.75..1329360.44 rows=2257590 width=12) (actual time=125.991..23031.882 rows=2244583 loops=1)
Q14,1.0,->  Hash Join  (cost=93983.37..1163278.60 rows=811060 width=29) (actual time=1353.706..23979.400 rows=774023 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8461.37..1065590.70 rows=811060 width=12) (actual time=119.594..21984.865 rows=774023 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..442970.50 rows=14804806 width=8) (actual time=0.020..8095.011 rows=14838716 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..734070.59 rows=14804806 width=8) (actual time=789.451..17587.849 rows=15338734 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=20) (actual time=0.009..4855.407 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2427162.17 rows=290415 width=15) (actual time=0.020..23207.271 rows=310565 loops=1)
Q12,1.0,->  Hash Join  (cost=593719.70..3029957.34 rows=290415 width=27) (actual time=9588.498..33135.159 rows=310565 loops=1)
Q12,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=20) (actual time=9543.854..9543.854 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.306..41.302 rows=4009 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.285..26.641 rows=4009 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=27.554..2457.696 rows=320720 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=42.359..4012.510 rows=320720 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=42.306..42.306 rows=4009 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=27.496..27.496 rows=4009 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.260..26.007 rows=4009 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.288..40.644 rows=4009 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1824306.54 rows=58925931 width=20) (actual time=0.012..18176.719 rows=58635734 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1824306.54 rows=14958054 width=12) (actual time=0.046..17918.494 rows=14808721 loops=1)
Q10,1.0,->  Hash  (cost=269229.99..269229.99 rows=580435 width=8) (actual time=6107.167..6107.167 rows=573764 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5989.46..269229.99 rows=580435 width=8) (actual time=27.505..5904.407 rows=573764 loops=1)
