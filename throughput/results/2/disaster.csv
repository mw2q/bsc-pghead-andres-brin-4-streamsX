Q21,699847.0,->  Nested Loop Semi Join  (cost=2406.31..2856697.02 rows=1 width=34) (actual time=32.461..37085.347 rows=699847 loops=1)
Q3,315364.4,->  Sort  (cost=2541731.57..2549615.68 rows=3153644 width=20) (actual time=32610.398..32610.398 rows=10 loops=1)
Q18,301427.8,->  GroupAggregate  (cost=10193208.77..11022135.28 rows=30142782 width=39) (actual time=68755.744..68756.070 rows=100 loops=1)
Q18,67905.0,->  Hash Join  (cost=2186167.00..2801648.35 rows=7537460 width=39) (actual time=44090.698..50289.558 rows=111 loops=1)
Q18,67905.0,->  Hash Join  (cost=2117139.00..2619558.45 rows=7537460 width=20) (actual time=42969.244..49167.796 rows=111 loops=1)
Q18,67905.0,->  Hash  (cost=2801648.35..2801648.35 rows=7537460 width=39) (actual time=50289.751..50289.751 rows=111 loops=1)
Q18,42999.6,->  Sort  (cost=10193208.77..10268565.73 rows=30142782 width=39) (actual time=68755.731..68755.766 rows=701 loops=1)
Q21,39503.0,->  Nested Loop Anti Join  (cost=2406.88..2856698.80 rows=1 width=26) (actual time=32.757..39891.448 rows=39503 loops=1)
Q18,38793.7,->  Hash Join  (cost=2895866.60..5624456.57 rows=30142782 width=39) (actual time=50663.723..68754.507 rows=777 loops=1)
Q18,36581.3,->  Hash  (cost=2066382.37..2066382.37 rows=4060530 width=4) (actual time=42845.568..42845.568 rows=111 loops=1)
Q18,36581.3,->  HashAggregate  (cost=1975020.44..2025777.07 rows=4060530 width=8) (actual time=38209.999..42845.350 rows=111 loops=1)
Q10,28367.8,->  Sort  (cost=2278277.40..2279695.79 rows=567356 width=175) (actual time=33274.423..33274.425 rows=20 loops=1)
Q9,22879.0,->  Sort  (cost=1245077.28..1245077.64 rows=142 width=46) (actual time=90738.208..91204.905 rows=3248819 loops=1)
Q9,22879.0,->  Nested Loop  (cost=66999.74..1245067.98 rows=142 width=24) (actual time=996.748..82222.520 rows=3248819 loops=1)
Q9,22879.0,->  Nested Loop  (cost=66999.31..1244999.16 rows=142 width=24) (actual time=996.698..49402.961 rows=3248819 loops=1)
Q9,22879.0,->  Nested Loop  (cost=66999.01..1244953.34 rows=142 width=28) (actual time=996.685..39185.273 rows=3248819 loops=1)
Q9,22879.0,->  Hash Join  (cost=67001.30..1245072.21 rows=142 width=46) (actual time=996.805..85463.138 rows=3248819 loops=1)
Q2,4646.0,->  Merge Join  (cost=465687.92..887797.92 rows=1 width=190) (actual time=6279.202..8237.930 rows=4646 loops=1)
Q21,3973.0,->  HashAggregate  (cost=2856698.80..2856698.81 rows=1 width=26) (actual time=39938.199..39939.232 rows=3973 loops=1)
Q15,3769.0,->  Subquery Scan on revenue2  (cost=1831750.37..1831835.18 rows=3769 width=12) (actual time=47397.057..47400.683 rows=1 loops=1)
Q15,3769.0,->  Sort  (cost=1832059.05..1832068.48 rows=3769 width=12) (actual time=47400.705..47400.706 rows=1 loops=1)
Q15,3769.0,Merge Join  (cost=3646842.65..3651940.38 rows=3769 width=79) (actual time=47432.002..47432.006 rows=1 loops=1)
Q15,3769.0,->  HashAggregate  (cost=1831750.37..1831797.49 rows=3769 width=12) (actual time=47397.056..47400.681 rows=1 loops=1)
Q7,765.5,Sort  (cost=2135157.43..2135165.09 rows=3062 width=64) (actual time=23365.229..23365.230 rows=4 loops=1)
Q7,765.5,->  HashAggregate  (cost=2134934.21..2134980.14 rows=3062 width=64) (actual time=23365.165..23365.175 rows=4 loops=1)
Q8,366.5,Sort  (cost=1705796.24..1705798.07 rows=733 width=38) (actual time=9813.989..9813.989 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=1705748.53..1705761.36 rows=733 width=38) (actual time=9813.951..9813.953 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2856698.82..2856698.83 rows=1 width=26) (actual time=39940.375..39940.380 rows=100 loops=1)
Q21,100.0,Limit  (cost=2856698.82..2856698.83 rows=1 width=26) (actual time=39940.377..39940.393 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=887797.93..887797.94 rows=1 width=190) (actual time=8242.536..8242.549 rows=100 loops=1)
Q2,100.0,Limit  (cost=887797.93..887797.94 rows=1 width=190) (actual time=8242.537..8242.559 rows=100 loops=1)
Q11,31.5,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=6698.978..6700.017 rows=10130 loops=1)
Q11,31.5,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=6625.315..6693.365 rows=10130 loops=1)
Q3,27.6,->  HashAggregate  (cost=2442046.01..2473582.45 rows=3153644 width=20) (actual time=32540.072..32589.130 rows=114070 loops=1)
Q15,26.5,->  HashAggregate  (cost=1814698.49..1814736.18 rows=3769 width=12) (actual time=22234.162..22259.611 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=726092)
Q14,13.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7839.66 rows=769166 width=0) (actual time=118.482..118.482 rows=10676480 loops=1)
Q3,10.4,->  Hash Join  (cost=764735.46..2394741.35 rows=3153644 width=20) (actual time=7984.270..32269.904 rows=302243 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2427.96 rows=322127 width=0) (actual time=34.885..34.885 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.076 rows=8 loops=433088)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.596..3.596 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.607..3.607 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.239..0.239 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.253..0.253 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.274..0.274 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.245..0.245 rows=23040 loops=1)
Q7,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=5 width=20) (actual time=0.010..0.011 rows=1 loops=1197475)
Q5,5.0,Sort  (cost=1914419.55..1914419.61 rows=25 width=34) (actual time=16222.414..16222.415 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1914418.72..1914418.97 rows=25 width=34) (actual time=16222.363..16222.365 rows=5 loops=1)
Q4,5.0,Sort  (cost=1473522.17..1473522.18 rows=1 width=16) (actual time=12608.795..12608.795 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.19 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=554681)
Q4,5.0,->  HashAggregate  (cost=1473522.15..1473522.16 rows=1 width=16) (actual time=12608.746..12608.748 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=699847)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5673.06 rows=563306 width=0) (actual time=27.955..27.955 rows=2545920 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5757.91 rows=571791 width=0) (actual time=27.310..27.310 rows=2540800 loops=1)
Q13,4.3,Sort  (cost=845604.26..845604.76 rows=200 width=8) (actual time=25596.709..25596.711 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=845594.62..845596.62 rows=200 width=8) (actual time=25596.642..25596.649 rows=46 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.013..0.014 rows=4 loops=456348)
Q17,3.7,->  Nested Loop  (cost=82.48..112840.80 rows=19825 width=4) (actual time=1.588..195.999 rows=5296 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5814.45..1472763.50 rows=151730 width=16) (actual time=28.145..12323.239 rows=508779 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.016..0.038 rows=3 loops=1947)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243716.82 rows=32475843 width=0) (actual time=118.455..118.455 rows=10708480 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.29 rows=1 width=8) (actual time=0.349..0.418 rows=3 loops=21823)
Q15,2.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..240317.75 rows=32022633 width=0) (actual time=125.819..125.819 rows=10708480 loops=1)
Q15,2.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..240317.75 rows=32022633 width=0) (actual time=119.359..119.359 rows=10708480 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54933.90 rows=7319187 width=0) (actual time=27.216..27.216 rows=2545920 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44376.00 rows=5911467 width=0) (actual time=27.267..27.267 rows=2545920 loops=1)
Q22,2.3,Sort  (cost=693509.04..693509.05 rows=3 width=20) (actual time=8858.465..8858.465 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=640595.19..640595.23 rows=3 width=20) (actual time=8858.411..8858.412 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.034..0.050 rows=2 loops=6323)
Q20,2.0,->  Nested Loop  (cost=754.49..11669221.62 rows=29347 width=4) (actual time=13.128..9411.887 rows=59155 loops=1)
Q20,2.0,->  Hash  (cost=11669221.62..11669221.62 rows=29347 width=4) (actual time=9448.791..9448.791 rows=59155 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2019.47 rows=200747 width=0) (actual time=4.159..4.159 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3035039.62..3035039.62 rows=1 width=27) (actual time=32227.977..32227.977 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3035039.60..3035039.61 rows=1 width=27) (actual time=32227.926..32227.926 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344682.67..2243322.80 rows=567356 width=175) (actual time=8898.997..31012.279 rows=1149942 loops=1)
Q10,2.0,->  Hash Join  (cost=344681.11..2235520.09 rows=567356 width=153) (actual time=8898.966..30603.577 rows=1149942 loops=1)
Q10,2.0,->  Hash Join  (cost=275653.11..2157981.75 rows=567356 width=12) (actual time=7355.526..28218.824 rows=1149942 loops=1)
Q16,1.9,->  Sort  (cost=404084.45..405578.10 rows=597459 width=40) (actual time=10529.418..10668.626 rows=1191011 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=1.170..4253.191 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54830.21..346762.80 rows=597459 width=40) (actual time=1287.975..7087.382 rows=1191011 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1824306.54 rows=20095188 width=8) (actual time=0.012..18947.326 rows=37929015 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2333259.32 rows=391744 width=38) (actual time=32.432..32965.465 rows=726092 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1910106.89 rows=803808 width=34) (actual time=32.340..24945.928 rows=1505234 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.046..1.110 rows=56 loops=1)
Q20,1.5,Sort  (cost=11672031.60..11672034.53 rows=1174 width=51) (actual time=9495.867..9495.968 rows=1769 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669631.46..11671971.74 rows=1174 width=51) (actual time=9449.256..9492.872 rows=1769 loops=1)
Q1,1.5,Sort  (cost=4220123.04..4220123.06 rows=6 width=20) (actual time=90362.346..90362.347 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4220122.86..4220122.96 rows=6 width=20) (actual time=90362.296..90362.296 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..6014.33 rows=600233 width=0) (actual time=4.136..4.136 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2257506.70..2263180.26 rows=567356 width=175) (actual time=32941.673..33134.999 rows=381796 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2874.65 rows=139968 width=0) (actual time=426.919..426.919 rows=190366 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2909.65..41861.81 rows=139968 width=24) (actual time=434.980..830.775 rows=190366 loops=1)
Q9,1.2,GroupAggregate  (cost=1245077.28..1245082.25 rows=142 width=46) (actual time=90747.237..93316.368 rows=175 loops=1)
Q15,1.2,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.029..23.048 rows=82932 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91163.58 rows=9101558 width=0) (actual time=122.970..122.970 rows=10664960 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=118116 width=4) (actual time=0.013..954.226 rows=108272 loops=1)
Q9,1.0,->  Hash Join  (cost=66998.45..352678.55 rows=472210 width=16) (actual time=996.614..5153.092 rows=433088 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=118116 width=4) (actual time=996.082..996.082 rows=108272 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.711..1985.833 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=407.05..1658030.67 rows=120285 width=20) (actual time=7.061..7441.638 rows=121223 loops=1)
Q8,1.0,->  Nested Loop  (cost=406.62..1464492.65 rows=395262 width=16) (actual time=6.876..3509.701 rows=397587 loops=1)
Q8,1.0,->  Nested Loop  (cost=38737.49..1704814.76 rows=24057 width=16) (actual time=2096.788..9736.406 rows=24152 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.25 rows=31 width=20) (actual time=0.023..0.245 rows=30 loops=13254)
Q8,1.0,->  Hash Join  (cost=38739.06..1705267.39 rows=24057 width=38) (actual time=2096.836..9774.822 rows=24152 loops=1)
Q8,1.0,->  Hash Join  (cost=38737.20..1697052.46 rows=24057 width=16) (actual time=2096.768..9599.261 rows=24152 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2086.793..2086.793 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..402.77 rows=13113 width=0) (actual time=4.595..4.595 rows=13254 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=406.05..27847.18 rows=13113 width=4) (actual time=6.817..133.428 rows=13254 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.629..387.089 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=8) (actual time=0.005..2485.557 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2122161.48 rows=1461804 width=42) (actual time=589.051..22544.338 rows=1455898 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2134021.70 rows=60834 width=64) (actual time=637.524..23273.142 rows=57803 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..532478.49 rows=1205994 width=30) (actual time=589.024..8557.351 rows=1197475 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.038..546.543 rows=119853 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..46.140 rows=7979 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=588.512..588.512 rows=119853 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=48.229..48.229 rows=7979 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91361.41..1362619.47 rows=791317 width=8) (actual time=123.739..24840.111 rows=794958 loops=1)
Q5,1.0,->  Nested Loop  (cost=83291.43..1894518.20 rows=1833920 width=46) (actual time=2231.242..15265.174 rows=1824870 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.684..2093.586 rows=300270 loops=1)
Q5,1.0,->  Hash Join  (cost=87970.43..1913685.16 rows=73356 width=34) (actual time=2294.548..16137.242 rows=72794 loops=1)
Q5,1.0,->  Hash Join  (cost=83290.87..439681.26 rows=458587 width=38) (actual time=2231.220..8021.498 rows=456348 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2201.827..2201.827 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=44949.24..388155.24 rows=2292937 width=8) (actual time=27.425..4733.757 rows=2281704 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.639..408.695 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5813.88..268797.47 rows=563306 width=20) (actual time=28.118..4680.627 rows=554681 loops=1)
Q3,1.0,->  Hash Join  (cost=106491.46..494601.10 rows=1463886 width=12) (actual time=675.866..7391.161 rows=1460565 loops=1)
Q3,1.0,->  Hash  (cost=494601.10..494601.10 rows=1463886 width=12) (actual time=7858.794..7858.794 rows=1460565 loops=1)
Q3,1.0,->  Hash  (cost=45977.63..45977.63 rows=300010 width=4) (actual time=646.592..646.592 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6874.50 rows=300010 width=0) (actual time=63.563..63.563 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56763.70..402787.54 rows=7319187 width=16) (actual time=27.374..4451.207 rows=7283292 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251835.79..1728520.82 rows=32475843 width=12) (actual time=119.194..19244.082 rows=32358927 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6949.50..45977.63 rows=300010 width=4) (actual time=71.787..555.986 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=4) (actual time=0.014..3947.620 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=4) (actual time=7838.537..7838.537 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=596629.35..640148.24 rows=59593 width=20) (actual time=8318.415..8830.881 rows=63450 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6553.19 rows=382158 width=0) (actual time=77.239..77.239 rows=381313 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6648.73..51958.38 rows=382158 width=4) (actual time=85.150..306.508 rows=381313 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.271..31.264 rows=3973 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=32.285..32.285 rows=3973 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.256..30.596 rows=3973 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6278.176..6398.505 rows=1602933 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.311..151.692 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7978 width=30) (actual time=0.307..1201.612 rows=7907 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=162.920..5224.809 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=162.783..162.783 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.254..29.448 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.280..42.159 rows=3991 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=8.922..8.922 rows=21823 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.264..41.359 rows=3991 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.497..258.563 rows=21823 loops=1)
Q19,1.0,->  Nested Loop  (cost=12923.04..614675.47 rows=1129 width=8) (actual time=32.582..2009.004 rows=1197 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4024.20 rows=401220 width=0) (actual time=4.138..4.138 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.87 rows=8016 width=0) (actual time=3.317..3.317 rows=7858 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.39 rows=7968 width=0) (actual time=3.668..3.668 rows=8100 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.59 rows=7889 width=0) (actual time=3.666..3.666 rows=8101 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=4850)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12918.30..26695.79 rows=4792 width=30) (actual time=31.775..126.434 rows=4850 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.005..3361.368 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673592.63 rows=60285563 width=8) (actual time=0.003..9844.320 rows=59986308 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673592.63 rows=60285563 width=8) (actual time=0.011..8612.704 rows=59986308 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.037 rows=30 loops=1947)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.037 rows=30 loops=1947)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.22 rows=1979 width=0) (actual time=0.900..0.900 rows=1947 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.71..6564.83 rows=1979 width=4) (actual time=1.231..32.931 rows=1947 loops=1)
Q16,1.0,Sort  (cost=413902.84..413972.89 rows=28021 width=40) (actual time=11317.970..11320.433 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51077.86..51077.86 rows=298890 width=40) (actual time=1284.793..1284.793 rows=297912 loops=1)
Q16,1.0,->  GroupAggregate  (cost=404084.45..411832.90 rows=28021 width=40) (actual time=10529.468..11259.406 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2502.68..51077.86 rows=298890 width=40) (actual time=34.953..1160.216 rows=297912 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=240886.14..1791962.64 rows=2273585 width=12) (actual time=120.118..20370.978 rows=2245854 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=240886.14..1791962.64 rows=2273585 width=12) (actual time=126.596..23116.571 rows=2245854 loops=1)
Q14,1.0,->  Hash Join  (cost=93553.95..1143854.36 rows=769166 width=29) (actual time=1611.010..25991.387 rows=747378 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8031.95..1046794.87 rows=769166 width=12) (actual time=119.383..23557.008 rows=747378 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..442970.50 rows=14804806 width=8) (actual time=0.023..7071.299 rows=14838716 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..734070.59 rows=14804806 width=8) (actual time=929.419..16642.441 rows=15338734 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=20) (actual time=0.010..4616.929 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2427162.17 rows=290415 width=15) (actual time=0.211..22342.223 rows=310565 loops=1)
Q12,1.0,->  Hash Join  (cost=593719.70..3029957.34 rows=290415 width=27) (actual time=9266.869..31919.479 rows=310565 loops=1)
Q12,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=20) (actual time=9221.967..9221.967 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.315..50.440 rows=3934 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.292..23.332 rows=3934 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=24.242..2301.607 rows=314720 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=51.824..4017.384 rows=314720 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=51.755..51.755 rows=3934 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.171..24.171 rows=3934 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.264..22.721 rows=3934 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.300..49.561 rows=3934 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1824306.54 rows=59895408 width=20) (actual time=0.011..19300.595 rows=59596413 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1820674.08 rows=14928270 width=12) (actual time=0.035..17528.273 rows=14823192 loops=1)
Q10,1.0,->  Hash  (cost=268505.72..268505.72 rows=571791 width=8) (actual time=7352.137..7352.137 rows=574587 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5900.85..268505.72 rows=571791 width=8) (actual time=27.483..7103.120 rows=574587 loops=1)
