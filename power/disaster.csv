Q21,695071.0,->  Nested Loop Semi Join  (cost=2406.31..2845262.57 rows=1 width=34) (actual time=39.299..39674.307 rows=695071 loops=1)
Q3,312787.2,->  Sort  (cost=2531310.15..2539129.83 rows=3127872 width=20) (actual time=44243.129..44243.132 rows=10 loops=1)
Q18,303260.0,->  GroupAggregate  (cost=10152758.28..10978383.74 rows=30022744 width=39) (actual time=68208.297..68208.624 rows=99 loops=1)
Q18,75833.2,->  Hash Join  (cost=2178301.87..2791497.58 rows=7507492 width=39) (actual time=42848.129..49514.095 rows=99 loops=1)
Q18,75833.2,->  Hash Join  (cost=2109273.87..2609857.20 rows=7507492 width=20) (actual time=41712.759..48378.452 rows=99 loops=1)
Q18,75833.2,->  Hash  (cost=2791497.58..2791497.58 rows=7507492 width=39) (actual time=49514.365..49514.365 rows=99 loops=1)
Q18,43322.8,->  Sort  (cost=10152758.28..10227815.14 rows=30022744 width=39) (actual time=68208.281..68208.331 rows=693 loops=1)
Q18,43322.8,->  Hash Join  (cost=2885341.23..5603065.15 rows=30022744 width=39) (actual time=49939.177..68207.052 rows=693 loops=1)
Q18,41015.4,->  Hash  (cost=2058517.24..2058517.24 rows=4060530 width=4) (actual time=41543.387..41543.387 rows=99 loops=1)
Q18,41015.4,->  HashAggregate  (cost=1967155.32..2017911.94 rows=4060530 width=8) (actual time=37323.722..41542.875 rows=99 loops=1)
Q21,39132.0,->  Nested Loop Anti Join  (cost=2406.88..2845264.35 rows=1 width=26) (actual time=39.518..42398.430 rows=39132 loops=1)
Q9,28775.4,->  Sort  (cost=1061709.14..1061709.42 rows=113 width=46) (actual time=86213.366..86659.493 rows=3251623 loops=1)
Q9,28775.4,->  Nested Loop  (cost=66699.44..1061701.60 rows=113 width=24) (actual time=617.000..77861.006 rows=3251623 loops=1)
Q9,28775.4,->  Nested Loop  (cost=66699.01..1061646.84 rows=113 width=24) (actual time=616.942..48422.973 rows=3251623 loops=1)
Q9,28775.4,->  Nested Loop  (cost=66698.71..1061610.38 rows=113 width=28) (actual time=616.931..38665.161 rows=3251623 loops=1)
Q9,28775.4,->  Hash Join  (cost=66701.00..1061705.28 rows=113 width=46) (actual time=617.062..80906.398 rows=3251623 loops=1)
Q10,28434.8,->  Sort  (cost=2274212.89..2275634.64 rows=568697 width=175) (actual time=35280.523..35280.527 rows=20 loops=1)
Q2,4594.0,->  Merge Join  (cost=465687.92..884573.59 rows=1 width=190) (actual time=6053.629..7936.705 rows=4594 loops=1)
Q21,3933.0,->  HashAggregate  (cost=2845264.35..2845264.36 rows=1 width=26) (actual time=42461.280..42462.322 rows=3933 loops=1)
Q15,3695.0,->  Subquery Scan on revenue0  (cost=1873613.66..1873696.80 rows=3695 width=12) (actual time=55381.646..55396.917 rows=1 loops=1)
Q15,3695.0,->  Sort  (cost=1873915.75..1873924.99 rows=3695 width=12) (actual time=55396.940..55396.941 rows=1 loops=1)
Q15,3695.0,Merge Join  (cost=3730963.28..3736059.90 rows=3695 width=79) (actual time=55438.695..55438.697 rows=1 loops=1)
Q15,3695.0,->  HashAggregate  (cost=1873613.66..1873659.85 rows=3695 width=12) (actual time=55381.645..55396.914 rows=1 loops=1)
Q7,765.5,Sort  (cost=2114730.15..2114737.81 rows=3062 width=64) (actual time=23755.923..23755.923 rows=4 loops=1)
Q7,765.5,->  HashAggregate  (cost=2114506.93..2114552.86 rows=3062 width=64) (actual time=23755.856..23755.860 rows=4 loops=1)
Q8,366.5,Sort  (cost=1764340.46..1764342.30 rows=733 width=38) (actual time=10601.089..10601.089 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=1764292.75..1764305.58 rows=733 width=38) (actual time=10601.049..10601.051 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2845264.37..2845264.38 rows=1 width=26) (actual time=42463.490..42463.498 rows=100 loops=1)
Q21,100.0,Limit  (cost=2845264.37..2845264.38 rows=1 width=26) (actual time=42463.491..42463.505 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=884573.60..884573.60 rows=1 width=190) (actual time=7941.436..7941.453 rows=100 loops=1)
Q2,100.0,Limit  (cost=884573.60..884573.60 rows=1 width=190) (actual time=7941.438..7941.463 rows=100 loops=1)
Q11,34.2,Sort  (cost=614386.98..615186.98 rows=320000 width=12) (actual time=7327.674..7328.639 rows=9348 loops=1)
Q11,34.2,->  HashAggregate  (cost=292163.31..296163.31 rows=320000 width=12) (actual time=7252.027..7322.403 rows=9348 loops=1)
Q3,27.5,->  HashAggregate  (cost=2432439.24..2463717.96 rows=3127872 width=20) (actual time=44175.544..44222.193 rows=113542 loops=1)
Q15,27.0,->  HashAggregate  (cost=1856964.09..1857001.04 rows=3695 width=12) (actual time=25663.427..25688.715 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=721541)
Q14,13.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8194.80 rows=804680 width=0) (actual time=117.735..117.735 rows=10664960 loops=1)
Q3,10.4,->  Hash Join  (cost=761660.18..2385521.16 rows=3127872 width=20) (actual time=7549.772..43866.354 rows=299405 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2423.61 rows=321547 width=0) (actual time=34.512..34.512 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.076 rows=8 loops=433088)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.637..3.637 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.650..3.650 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.238..0.238 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.262..0.262 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.261..0.261 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.270..0.270 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.242..0.242 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1959512.30..1959512.36 rows=25 width=34) (actual time=16014.334..16014.334 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1959511.47..1959511.72 rows=25 width=34) (actual time=16014.278..16014.280 rows=5 loops=1)
Q4,5.0,Sort  (cost=1481026.15..1481026.15 rows=1 width=16) (actual time=14746.317..14746.317 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.08 rows=5 width=4) (actual time=0.016..0.016 rows=1 loops=574973)
Q4,5.0,->  HashAggregate  (cost=1481026.13..1481026.14 rows=1 width=16) (actual time=14746.260..14746.262 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=695071)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5771.44 rows=573144 width=0) (actual time=27.381..27.381 rows=2535680 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5771.44 rows=573144 width=0) (actual time=27.630..27.630 rows=2535680 loops=1)
Q13,4.3,Sort  (cost=842665.82..842666.32 rows=200 width=8) (actual time=26150.367..26150.369 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=842656.18..842658.18 rows=200 width=8) (actual time=26150.277..26150.286 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.011 rows=1 loops=1199377)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=455387)
Q17,3.5,->  Nested Loop  (cost=77.91..109739.22 rows=19255 width=4) (actual time=1.510..181.034 rows=5404 loops=1)
Q4,3.4,->  Nested Loop Semi Join  (cost=5915.29..1480251.15 rows=154996 width=16) (actual time=27.642..14432.008 rows=527103 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.61 rows=10 width=12) (actual time=0.011..0.024 rows=3 loops=2004)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..61378.21 rows=8178428 width=0) (actual time=27.266..27.266 rows=2535680 loops=1)
Q15,3.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..256010.89 rows=34115052 width=0) (actual time=121.313..121.313 rows=10664960 loops=1)
Q15,3.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..256010.89 rows=34115052 width=0) (actual time=118.902..118.902 rows=10664960 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..242967.66 rows=32375954 width=0) (actual time=118.721..118.721 rows=10664960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.50 rows=1 width=8) (actual time=0.281..0.351 rows=3 loops=21670)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54640.89 rows=7280119 width=0) (actual time=27.457..27.457 rows=2535680 loops=1)
Q22,2.3,Sort  (cost=691298.33..691298.34 rows=3 width=20) (actual time=8335.385..8335.386 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=638303.81..638303.86 rows=3 width=20) (actual time=8335.303..8335.304 rows=7 loops=1)
Q20,2.2,->  Nested Loop  (cost=753.99..10615575.50 rows=26679 width=4) (actual time=13.005..8225.434 rows=58861 loops=1)
Q20,2.2,->  Hash  (cost=10615575.50..10615575.50 rows=26679 width=4) (actual time=8263.346..8263.346 rows=58861 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.032..0.048 rows=2 loops=6251)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2019.47 rows=200747 width=0) (actual time=4.167..4.167 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3023005.18..3023005.19 rows=1 width=27) (actual time=34695.830..34695.830 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3023005.16..3023005.17 rows=1 width=27) (actual time=34695.773..34695.774 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344227.74..2239175.68 rows=568697 width=175) (actual time=11072.557..33090.211 rows=1151430 loops=1)
Q10,2.0,->  Hash Join  (cost=344226.18..2231354.53 rows=568697 width=153) (actual time=11072.532..32682.158 rows=1151430 loops=1)
Q10,2.0,->  Hash Join  (cost=275198.18..2153796.07 rows=568697 width=12) (actual time=9439.313..30269.946 rows=1151430 loops=1)
Q16,1.9,->  Sort  (cost=403906.03..405396.34 rows=596124 width=40) (actual time=10066.546..10220.579 rows=1186525 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.540..3803.473 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54802.84..346722.08 rows=596124 width=40) (actual time=1460.416..6825.292 rows=1186525 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817041.60 rows=20015163 width=8) (actual time=0.005..20784.691 rows=37967116 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323951.25 rows=390184 width=38) (actual time=39.280..34558.676 rows=721541 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1902509.85 rows=800607 width=34) (actual time=39.259..26864.840 rows=1493627 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.031..0.490 rows=56 loops=1)
Q20,1.6,Sort  (cost=10618344.34..10618347.01 rows=1067 width=51) (actual time=8295.628..8295.727 rows=1747 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10615951.99..10618290.68 rows=1067 width=51) (actual time=8263.789..8293.646 rows=1747 loops=1)
Q9,1.5,GroupAggregate  (cost=1061709.14..1061713.09 rows=113 width=46) (actual time=86222.801..88766.179 rows=175 loops=1)
Q1,1.5,Sort  (cost=4171758.10..4171758.12 rows=6 width=20) (actual time=88218.615..88218.616 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4171757.92..4171758.03 rows=6 width=20) (actual time=88218.557..88218.559 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..6014.33 rows=600233 width=0) (actual time=4.135..4.135 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2253393.10..2259080.07 rows=568697 width=175) (actual time=34950.067..35142.326 rows=382158 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2908.39 rows=140537 width=0) (actual time=437.525..437.525 rows=190991 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2943.53..41910.62 rows=140537 width=24) (actual time=445.578..556.670 rows=190991 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=94092 width=4) (actual time=0.013..586.049 rows=108272 loops=1)
Q9,1.1,->  Hash Join  (cost=66698.15..351417.81 rows=376166 width=16) (actual time=616.656..4695.482 rows=433088 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=94092 width=4) (actual time=616.126..616.126 rows=108272 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91326.56 rows=9117856 width=0) (actual time=119.433..119.433 rows=10664960 loops=1)
Q15,1.1,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.019..33.264 rows=83967 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.680..1856.630 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=423.35..1716217.48 rows=124867 width=20) (actual time=7.441..8330.062 rows=123502 loops=1)
Q8,1.0,->  Nested Loop  (cost=422.91..1515310.32 rows=410321 width=16) (actual time=7.361..3766.817 rows=407713 loops=1)
Q8,1.0,->  Nested Loop  (cost=38753.79..1763323.49 rows=24973 width=16) (actual time=1958.625..10521.817 rows=24770 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.48 rows=31 width=20) (actual time=0.026..0.247 rows=30 loops=13566)
Q8,1.0,->  Hash Join  (cost=38755.35..1763793.29 rows=24973 width=38) (actual time=1958.676..10559.449 rows=24770 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.49..1755265.61 rows=24973 width=16) (actual time=1958.591..10350.066 rows=24770 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1947.259..1947.259 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..418.93 rows=13667 width=0) (actual time=5.006..5.006 rows=13566 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=422.35..28524.71 rows=13667 width=4) (actual time=7.304..278.571 rows=13566 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.670..362.091 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=8) (actual time=0.006..3512.691 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2101770.17 rows=1455983 width=42) (actual time=630.456..23064.685 rows=1457797 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2113598.05 rows=60592 width=64) (actual time=671.119..23663.347 rows=58675 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..530594.42 rows=1201199 width=30) (actual time=630.227..8926.223 rows=1199377 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.037..592.501 rows=120316 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.038..38.468 rows=8102 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=629.712..629.712 rows=120316 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=40.506..40.506 rows=8102 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91516.44..1363141.20 rows=759518 width=8) (actual time=120.278..29095.215 rows=763039 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.836..2153.076 rows=299493 loops=1)
Q5,1.0,->  Nested Loop  (cost=100293.02..1939627.47 rows=1831930 width=46) (actual time=2294.629..15184.517 rows=1821898 loops=1)
Q5,1.0,->  Hash Join  (cost=104972.02..1958778.71 rows=73276 width=34) (actual time=2363.345..15929.669 rows=72311 loops=1)
Q5,1.0,->  Hash Join  (cost=100292.46..489661.05 rows=458093 width=38) (actual time=2294.604..7823.950 rows=455387 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2265.164..2265.164 rows=299493 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=61950.83..438149.25 rows=2290464 width=8) (actual time=27.438..4653.624 rows=2277830 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.701..420.264 rows=59899 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5914.72..268033.88 rows=573144 width=20) (actual time=27.579..4839.805 rows=574973 loops=1)
Q3,1.0,->  Hash Join  (cost=106135.84..492465.89 rows=1450612 width=12) (actual time=417.545..6953.496 rows=1456242 loops=1)
Q3,1.0,->  Hash  (cost=492465.89..492465.89 rows=1450612 width=12) (actual time=7423.272..7423.272 rows=1456242 loops=1)
Q3,1.0,->  Hash  (cost=45938.85..45938.85 rows=298885 width=4) (actual time=387.920..387.920 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6850.06 rows=298885 width=0) (actual time=64.640..64.640 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56460.92..400984.41 rows=7280119 width=16) (actual time=27.633..4397.759 rows=7278018 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251061.65..1722234.07 rows=32375954 width=12) (actual time=119.482..30760.348 rows=32441290 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6924.79..45938.85 rows=298885 width=4) (actual time=72.533..316.375 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=4) (actual time=0.013..3711.677 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=4) (actual time=7609.443..7609.443 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=594302.67..637855.04 rows=59836 width=20) (actual time=8102.789..8314.047 rows=63071 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6588.84 rows=383710 width=0) (actual time=72.972..72.972 rows=381772 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6684.77..52035.16 rows=383710 width=4) (actual time=80.726..313.456 rows=381772 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.294..38.095 rows=3933 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=39.210..39.210 rows=3933 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.280..37.414 rows=3933 loops=1)
Q2,1.0,->  Sort  (cost=465687.32..469687.32 rows=1600000 width=168) (actual time=6052.736..6175.806 rows=1604034 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.336..168.447 rows=20051 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7896 width=30) (actual time=0.053..1140.489 rows=7748 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300810.20 rows=1600000 width=168) (actual time=179.917..4996.646 rows=1604080 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=179.822..179.822 rows=20051 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.258..32.751 rows=4010 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.298..28.948 rows=3933 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=8.885..8.885 rows=21670 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.279..28.361 rows=3933 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=753.56..34891.02 rows=20020 width=4) (actual time=12.474..584.210 rows=21670 loops=1)
Q19,1.0,->  Nested Loop  (cost=12940.99..621055.62 rows=1136 width=8) (actual time=31.024..1531.814 rows=1189 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4024.20 rows=401220 width=0) (actual time=4.160..4.160 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..291.43 rows=8174 width=0) (actual time=3.183..3.183 rows=7959 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.35 rows=7964 width=0) (actual time=3.466..3.466 rows=8090 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.95 rows=7923 width=0) (actual time=3.435..3.435 rows=8055 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.026..0.026 rows=30 loops=4699)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12936.25..26825.52 rows=4843 width=30) (actual time=30.861..279.899 rows=4699 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.006..3801.358 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1666927.88 rows=60045488 width=8) (actual time=0.006..8507.299 rows=60045669 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666927.88 rows=60045488 width=8) (actual time=0.006..8109.451 rows=60045669 loops=1)
Q18,1.0,Limit  (cost=10152758.28..10152761.03 rows=100 width=39) (actual time=68208.300..68208.635 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.034 rows=30 loops=2004)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.034 rows=30 loops=2004)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..67.67 rows=1924 width=0) (actual time=0.871..0.871 rows=2004 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.15..6402.19 rows=1924 width=4) (actual time=1.202..48.202 rows=2004 loops=1)
Q16,1.0,Sort  (cost=413702.08..413771.98 rows=27959 width=40) (actual time=10876.879..10878.722 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51058.84..51058.84 rows=298222 width=40) (actual time=1457.899..1457.899 rows=296799 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403906.03..411637.17 rows=27959 width=40) (actual time=10066.622..10818.035 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2498.16..51058.84 rows=298222 width=40) (actual time=34.607..1328.564 rows=296799 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=256565.88..1834764.66 rows=2219943 width=12) (actual time=119.803..23440.260 rows=2249598 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=256565.88..1834764.66 rows=2219943 width=12) (actual time=122.246..27287.358 rows=2249598 loops=1)
Q14,1.0,->  Hash Join  (cost=93917.97..1157753.82 rows=804680 width=29) (actual time=1554.719..42137.327 rows=773681 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8395.97..1060161.62 rows=804680 width=12) (actual time=118.591..39622.267 rows=773681 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441209.30 rows=14745944 width=8) (actual time=0.021..7576.374 rows=14853529 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..731426.46 rows=14745944 width=8) (actual time=771.101..17096.617 rows=15353549 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=20) (actual time=0.007..4981.097 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2417496.48 rows=290247 width=15) (actual time=0.064..24425.593 rows=311491 loops=1)
Q12,1.0,->  Hash Join  (cost=591359.14..3017925.84 rows=290247 width=27) (actual time=9571.516..34371.887 rows=311491 loops=1)
Q12,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=20) (actual time=9526.739..9526.739 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.305..48.226 rows=4004 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.297..27.057 rows=4004 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=8) (actual time=27.908..2649.696 rows=320320 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286563.31 rows=320000 width=12) (actual time=49.470..4251.497 rows=320320 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=49.437..49.437 rows=4004 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=27.846..27.846 rows=4004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.264..26.413 rows=4004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.287..47.312 rows=4004 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817041.60 rows=58867908 width=20) (actual time=0.027..18301.900 rows=58876178 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1817041.60 rows=14898486 width=12) (actual time=0.011..17714.124 rows=14822992 loops=1)
Q10,1.0,->  Hash  (cost=268033.88..268033.88 rows=573144 width=8) (actual time=9435.736..9435.736 rows=574973 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5914.72..268033.88 rows=573144 width=8) (actual time=27.908..9165.436 rows=574973 loops=1)
